{
	"info": {
		"_postman_id": "8866a2f4-5157-45a9-bbda-ddb50ed24464",
		"name": "HostelCombine API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Hostels",
			"item": [
				{
					"name": "Get All Hostels",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels"
							]
						},
						"description": "Fetch all hostels from database includes pagination, filtering, etc."
					},
					"response": []
				},
				{
					"name": "Get Single Hostel",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5ec3e42dd60b0e2146a7a256",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5ec3e42dd60b0e2146a7a256"
							]
						},
						"description": "Get single hostel by ID"
					},
					"response": []
				},
				{
					"name": "Create Hostel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": \"5d7a514b5d2c12c7449be046\",\n    \"name\": \"Seashore Hostel 2\",\n    \"description\": \"Seashore hostel has a private beach, and that is to make you a healing. It is also good for solo travellers.\",\n    \"website\": \"https://seashore-hostel.com\",\n    \"phone\": \"(222) 222-2222\",\n    \"email\": \"info@seashore-hostel.com\",\n    \"address\": \"220 Pawtucket St, Lowell, MA 01854\",\n    \"facilities\": [\"free wifi\", \"laundry\", \"kitchen\", \"free breakfast\"],\n    \"tour\": false\n  }"
						},
						"url": {
							"raw": "{{URL}}/api/v1/hostels",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels"
							]
						},
						"description": "Add new hostel to database. Must be authenticated and must be publisher or admin"
					},
					"response": []
				},
				{
					"name": "Update Hostel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tour\": true\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5ec3e42dd60b0e2146a7a256",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5ec3e42dd60b0e2146a7a256"
							]
						},
						"description": "Update single hostel in database"
					},
					"response": []
				},
				{
					"name": "Delete Hostel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5ec3e42dd60b0e2146a7a256",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5ec3e42dd60b0e2146a7a256"
							]
						},
						"description": "Delete hostel from database"
					},
					"response": []
				},
				{
					"name": "Get Hostels By Distance",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels/radius/02215/10",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"radius",
								"02215",
								"10"
							]
						},
						"description": "Get hostels within a radius of a specific zipcode"
					},
					"response": []
				},
				{
					"name": "Get All Hostels By Filtering",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels?minimumPrice[lte]=10&location.city=Burlington&facilities[in]=paid breakfast",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels"
							],
							"query": [
								{
									"key": "minimumPrice[lte]",
									"value": "10"
								},
								{
									"key": "location.city",
									"value": "Burlington"
								},
								{
									"key": "facilities[in]",
									"value": "paid breakfast"
								}
							]
						},
						"description": "Get search results by cost, city name, array filter"
					},
					"response": []
				},
				{
					"name": "Get All Hostels By Filtering2",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels?select=facilities&sort=minimumPrice",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels"
							],
							"query": [
								{
									"key": "select",
									"value": "facilities"
								},
								{
									"key": "sort",
									"value": "minimumPrice"
								}
							]
						},
						"description": "Get all hostels by select and sort"
					},
					"response": []
				},
				{
					"name": "Get All Hostels With Pagination",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels?page=2&limit=2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "2"
								}
							]
						},
						"description": "Get all hostels with page, limit"
					},
					"response": []
				},
				{
					"name": "Upload Photo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/home/suhy/Downloads/hostel.jpg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5d725a1b7b292f5f8ceff788/photo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5d725a1b7b292f5f8ceff788",
								"photo"
							]
						},
						"description": "Route to upload a hostel photo"
					},
					"response": []
				}
			],
			"description": "Hostels CRUD functionality",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7b0c8f6c-dbb5-4c66-824c-38f4ce2b92a1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d07fb7db-f16d-40cd-8f2f-09821da37f6c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rooms",
			"item": [
				{
					"name": "Get Rooms For Hostel",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5d713a66ec8f2b88b8f830b8/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5d713a66ec8f2b88b8f830b8",
								"rooms"
							]
						},
						"description": "Get the specific rooms for a hostel"
					},
					"response": []
				},
				{
					"name": "Get All Rooms",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms"
							]
						},
						"description": "Get all rooms in database"
					},
					"response": []
				},
				{
					"name": "Get Single Room",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms/5ec623b350ae254352de1c13",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								"5ec623b350ae254352de1c13"
							]
						},
						"description": "Get single room by ID"
					},
					"response": []
				},
				{
					"name": "Create Room",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"dorm\",\n\t\"gender\": \"mixed\",\n\t\"head\": 20,\n\t\"price\": 10,\n\t\"privateBath\": true,\n\t\"user\": \"5d7a514b5d2c12c7449be045\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5d713a66ec8f2b88b8f830b8/rooms",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5d713a66ec8f2b88b8f830b8",
								"rooms"
							]
						},
						"description": "Add new room to database. Must be authenticated and must be publisher or admin"
					},
					"response": []
				},
				{
					"name": "Update Room",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"dorm\",\n\t\"gender\": \"mixed\",\n\t\"head\": 20,\n\t\"price\": 10,\n\t\"privateBath\": true\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/rooms/5ec6235750ae254352de1c12",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								"5ec6235750ae254352de1c12"
							]
						},
						"description": "Update room in database"
					},
					"response": []
				},
				{
					"name": "Delete Room",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/rooms/5ec3e81bd60b0e2146a7a259",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"rooms",
								"5ec3e81bd60b0e2146a7a259"
							]
						},
						"description": "Delete room in database"
					},
					"response": []
				}
			],
			"description": "Rooms CRUD functionality",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "02d85575-7b90-4a04-9d4d-7cfe4b964531",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ec000ae6-ecd0-4a26-8531-58cad75cb33b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentications",
			"item": [
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"User Account\",\n\t\"email\": \"user@gmail.com\",\n\t\"role\": \"user\",\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Add user to database with encrypted password"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "login user comparing password with encrypted pw in db"
					},
					"response": []
				},
				{
					"name": "Get Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get Logged in User via Token"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"sasha@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/forgotpassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgotpassword"
							]
						},
						"description": "Generate password token and send email"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/resetpassword/2fc219c5831b9d07395a6578d545f589d137aa62",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resetpassword",
								"2fc219c5831b9d07395a6578d545f589d137aa62"
							]
						},
						"description": "Reset user password using token"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"admin\",\n\t\"email\": \"admin@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatedetails",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatedetails"
							]
						},
						"description": "Update logged in user name and email"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"currentPassword\": \"123456\",\n\t\"newPassword\": \"foobar\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatepassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatepassword"
							]
						},
						"description": "Update logged in user password, send in the body currentPassword and newPassword"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Clear token cookie"
					},
					"response": []
				}
			],
			"description": "routes for user authentication including register, login, reset password, etc.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "127bf3d1-0c13-4dc5-a2c9-884e42fc0f9f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ad4bade5-aef7-416a-b176-7b1dd22ac78d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Get all users (admin)"
					},
					"response": []
				},
				{
					"name": "Get Single User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/5c8a1d5b0190b214360dc031",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"5c8a1d5b0190b214360dc031"
							]
						},
						"description": "Get single user by id (admin)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Publisher Account 2\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/5d7a514b5d2c12c7449be045",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"5d7a514b5d2c12c7449be045"
							]
						},
						"description": "Update user in database (admin)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/5d7a514b5d2c12c7449be045",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"5d7a514b5d2c12c7449be045"
							]
						},
						"description": "Delete user from database (admin)"
					},
					"response": []
				}
			],
			"description": "CRUD functionality for users only available to admins",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get All Reviews",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						},
						"description": "Get all reviews from database and populdate with hostel name and description"
					},
					"response": []
				},
				{
					"name": "Get Reviews For Hostel",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5d713995b721c3bb38c1f5d0/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5d713995b721c3bb38c1f5d0",
								"reviews"
							]
						},
						"description": "Fetch the reviews for a specific hostel"
					},
					"response": []
				},
				{
					"name": "Get Single Review",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5ec623d650ae254352de1c14",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5ec623d650ae254352de1c14"
							]
						},
						"description": "Fetch a review from database by id and populate Hostel name and description"
					},
					"response": []
				},
				{
					"name": "Add Review for Hostel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Low price, clean room!\",\n    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec viverra feugiat mauris id viverra. Duis luctus ex sed facilisis ultrices. Curabitur scelerisque bibendum ligula, quis condimentum libero fermentum in. Aenean erat erat, aliquam in purus a, rhoncus hendrerit tellus. Donec accumsan justo in felis consequat sollicitudin. Fusce luctus mattis nunc vitae maximus. Curabitur semper felis eu magna laoreet scelerisque\",\n    \"rating\": 5\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/hostels/5d713995b721c3bb38c1f5d0/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"hostels",
								"5d713995b721c3bb38c1f5d0",
								"reviews"
							]
						},
						"description": "Insert review for a specific hostel (user, admin)"
					},
					"response": []
				},
				{
					"name": "Update Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Great experience\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5ec623d650ae254352de1c14",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5ec623d650ae254352de1c14"
							]
						},
						"description": "Update review in db"
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5ec623d650ae254352de1c14",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5ec623d650ae254352de1c14"
							]
						},
						"description": "Delete review from database"
					},
					"response": []
				}
			],
			"description": "Manage hostel reviews",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "68b88ace-e649-42ac-818f-963994a46c74",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7679aeba-adb4-4b8a-bb22-7dceca07e2ad",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "Login with sanitizer",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": {\"$gt\": \"\"},\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "The example of hacking"
					},
					"response": []
				},
				{
					"name": "Register User with xss clean",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON content",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"<alert>test</alert>\",\n\t\"email\": \"test@gmail.com\",\n\t\"role\": \"user\",\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register User with html tag"
					},
					"response": []
				}
			],
			"description": "To check security issues",
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}